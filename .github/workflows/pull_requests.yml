name: PR Checks
on: pull_request
jobs:
  build_id:
    runs-on: ubuntu-latest
    steps:
      - name: 'Set build id'
        id: build_id
        run: echo "::set-output name=id::$date +%s)"
      - name: 'Cache .build-id'
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/.build-id
          key: ${{ runner.os }}-build-id-${{ github.head_ref }}-${{ github.sha }}-${{ steps.build_id.outputs.id }}
      - name: 'Save build id'
        run: |
          mkdir -p .build-id 
          echo $BUILD_ID > .build-id/id
        env:
          BUILD_ID: ${{ steps.build_id.outputs.id }}
  run_pr_check:
    needs: build_id
    name: EMF PR Checks
    runs-on: ubuntu-latest
    # runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [10.x]
        containers: [1, 2 ,3]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: 'Cache .build-id'
      uses: actions/cache@v1
      with:
        path: ${{ github.workspace }}/.build-id
        key: ${{ runner.os }}-build-id-${{ github.head_ref }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-build-id-${{ github.head_ref }}-${{ github.sha }}
    # set the build id from the restored cache
    - name: 'Set build id'
      id: build_id
      run: echo "::set-output name=id::$(cat .build-id/id)"
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache NPM dependencies
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-npm-cache-
    - name: Install Dependencies
      run: npm install
    - name: Run End-to-end tests
      uses: cypress-io/github-action@v1
      # timeout-minutes: 10
      with:
        install: false
        record: false
        parallel: true
        group: 'Cypress group example'
        # build: npm run test:e2e:ci
        # start: npm run test:e2e:ci
        browser: chrome
        spec: cypress/integration/examples/actions.spec.js
        start: npm run test:e2e:ci
        wait-on: http://localhost:8080
        ci-build-id: '${{ github.sha }}-${{ github.workflow }}-${{ github.event_name }}'
      env:
        # CYPRESS_RECORD_KEY: ${{ secrets.dashboardRecordKey }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}